/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */img,legend{border:0}body,html{height:100%}legend,li,ol,td,th,ul{padding:0}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent;color:#383023}:focus,a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none} input[type=reset],button,html input[type=button],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{}table{border-collapse:collapse;border-spacing:0}html{font-size:17px}body{margin:0;font-family:Georgia,"Times New Roman",Times,serif;font-size:1rem;line-height:1.3}.icon,.icon-hover,.icon:hover{background-image:url(../images/sprite.png);width:209px;height:210px}li,ol,ul{list-style:none;margin:0}a:hover{text-decoration:none}h1{margin:.67em 0;font-size:2.5rem}h2{font-size:2rem}h3{font-size:1.75rem}h4{font-size:1.5rem}h5{font-size:1.25rem}h6{font-size:1rem}h1,h2,h3,h4,h5,h6{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;color:#201300}.left{float:left}.right{float:right}.both:after,.cr{float:none;clear:both;margin:0;padding:0}.both:after{content:"";display:block}.cr{font-size:.1px}i{display:inline-block}.icon-hover{background-position:0 0}.icon{background-position:-209px 0}.icon:hover{background-position:0 0}@font-face{font-family:etelka-pro;src:url(../fonts/etelka-text-pro-bold.eot);src:url(../fonts/etelka-text-pro-bold.eot?#iefix) format("embedded-opentype"),url(../fonts/etelka-text-pro-bold.woff) format("woff"),url(../fonts/etelka-text-pro-bold.ttf) format("truetype"),url(../fonts/etelka-text-pro-bold.svg#etelka-text-pro-bold) format("svg");font-weight:400;font-style:normal}
/*# sourceMappingURL=data:application/json;base64, */
